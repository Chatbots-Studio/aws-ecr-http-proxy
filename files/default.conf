proxy_cache_path /cache/cache levels=1:2 keys_zone=cache:16m inactive=1y use_temp_path=off;
resolver RESOLVER valid=30s;
server {
  listen PORT default_server;

  # Cache
  add_header X-Cache-Status   $upstream_cache_status;
  proxy_temp_path /cache/temp 1 2;
  proxy_ignore_headers        Cache-Control;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/moby/moby/issues/1486)
  chunked_transfer_encoding on;

  # increases timeouts to avoid HTTP 504
  proxy_connect_timeout  300s;
  proxy_read_timeout     300s;
  proxy_send_timeout     300s;
  send_timeout           300s;

  location / {
    set $url        UPSTREAM;
    proxy_pass      $url;

    # Add AWS ECR authentication headers
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $remote_addr;
    proxy_set_header  X-Forwarded-User   "Basic $http_authorization";
    proxy_set_header  Authorization      "Basic $http_authorization";
    proxy_set_header  X-Forwarded-Proto  $scheme;
  }

  # Content addressable files like blobs.
  # https://docs.docker.com/registry/spec/api/#blob
  location ~ ^/v2/.*/blobs/[a-z0-9]+:[a-f0-9]+$ {
    set $url        UPSTREAM;
    proxy_pass      $url;

    # Add AWS ECR authentication headers
    proxy_set_header  X-Real-IP          $remote_addr;
    proxy_set_header  X-Forwarded-For    $remote_addr;
    proxy_set_header  X-Forwarded-User   "Basic $http_authorization";
    proxy_set_header  Authorization      "Basic $http_authorization";
    proxy_set_header  X-Forwarded-Proto  $scheme;

    # When accessing image blobs using HTTP GET AWS ECR redirects with
    # s3 buckets uri to download the image. This needs to handled by
    # nginx rather then docker client for caching.
    proxy_intercept_errors    on;
    error_page 301 302 307 =  @handle_redirect;
  }

  # No authentication headers needed as ECR returns s3 uri with details in
  # query params. Also the params should be part of cache key for nginx to
  # issue HIT for same image blob.
  location @handle_redirect {
    set                    $saved_redirect_location '$upstream_http_location';
    proxy_pass             $saved_redirect_location;
    proxy_cache            cache;
    proxy_cache_key        $scheme$proxy_host$uri$request_method;
    proxy_cache_valid      200  1y;
    proxy_cache_use_stale  error timeout invalid_header updating
                           http_500 http_502 http_503 http_504;
    proxy_cache_lock       on;
  }
}
